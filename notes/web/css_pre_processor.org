#+title: css预处理选型

* css 的缺陷
1. css 没有继承功能
2. 大量重复的选择器
3. 缺少编程语言要素，导致 css 缺少逻辑性
4. css 的正交问题

* 待选项：

** Sass：
2007 年诞生，最早也是最成熟的 CSS 预处理器，拥有 ruby 社区的支持和 compass 这一最强大的 css 框架，目前受 LESS 影响，已经进化到了全面兼容 CSS 的 SCSS。

*** 缺点：
    1. 没有全局变量的概念
    2. 需要 ruby 或 python2

** Less：
2009 年出现，受 SASS 的影响较大，在 ruby 社区之外支持者远超过 SASS，其缺点是比起 SASS 来，可编程功能不够，不过优点是简单和兼容 CSS。著名的 Twitter Bootstrap 就是采用 LESS 做底层语言的。

*** 缺点：
    1. 需要通过 when 等关键词模拟语言要素

** Stylus：
2010 年产生，来自 Node.js 社区，主要用来给 Node 项目进行 CSS 预处理支持，在此社区之内有一定支持者，在广泛的意义上人气还完全不如 SASS 和 LESS。

* 结论
  1. 在 vue 环境中，vue 的 style 的 scope 特性实现了 component-style 功能。所以，在 vue 中，对于“修改某个元素的 style”这样的需求，可以直接实现。
  2. 对于“更新整个 app 的风格，更换页面主题”这个需求，则需要 css 预处理器的支持。
  3. vuetify 有自己的主题支持以及 class 设计。简单需求用 css 支持即可，复杂的需求则需要 css 预处理器。
  4. less 对编程语言特性的支持缺乏，pass
  5. 在 sass 和 stylus 中，sass 更接近 css 风格，当需求较简单时，可以采用 sass，当需要设计更复杂的 style 时，则采用stylus


