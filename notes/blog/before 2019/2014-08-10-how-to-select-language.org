# how to select language

## 在不同的场景下需要使用不同的语言
	Unix编程艺术中的 无根的根中的一段：
	   无名师与万行码 
	   无名师曾对来访的程序员说：“Unix传统上认为，一行 shell脚本胜过万行C程序." 
	   这个程序员自以为对C极其精通，说：“这不可能。Unix内核正是用C实现的。” 
	   无名师回道：“确实如此。不过，Unix传统上认为，一行shell脚本胜过万行C程序." 
	   程序员颇为沮丧：“但是在C中我们可领会到尊者Ritchie的智慧。我们与操作系统和机器合而为一，可以获取无与伦比的性能。“ 
	   无名师回道：“诚如你言。不过，Unix传统上认为，一行shell脚本胜过万行C程序。” 
	   程序员冷笑着想悲愤离去。无名师向学生Nabi颌首示意，Nubi在黑板上写下一行shell脚本，问道：“尊敬的程序员，看看这行管道。用纯C实现，是 不是要一万行C代码？“ 
	   程序员沉吟念诵。最终他承认如此。 
	   “你需要多长时间来实现和调试那个C程序?"Nubi问道。 
	   “很长”，来访程序员承认。“但傻子才会干这个而不去完成更有价值的任务。” 
	   “那么谁更了解Unix传统？”无名师问道。“是写一万行代码的，还是看到任务的无谓而不去编码的？” 
	   听到此，程序员眼中一亮。


## 文本处理场景

用来处理文本，或者文本文件内容，比如给多个文件增加注释。

* 文件操作
* 字符串定义和操作
* 统计功能，或者可代替的简单做法
* 运行简单方便，速度快
* 支持正则表达式
	
候选语言：

* shell+awk+sed 等
* python
* perl
* php 不清楚如何在没有WebServer的情况下运行，而且linux默认没有这个
* ruby
* VBscript等office自带的脚本语言
* 你熟悉的任何语言

## 代码，工程管理场景

用来管理各种工程的更新，编译，打包等

* 运行方便简单，速度快
* 可以方便调用命令行或者其他程序（用于调用外部工具）
* 可扩展
* 代码简单

候选语言：

* shell
* xml(ant, maven...)
* python
* groovy 因为gradle而入选
* ruby 因为buildr而入选
* 你用什么写代码，就用他们管理他们自己
	
## 自动化

用来自动化测试，自动化工作等

* 运行方便简单，速度快
* 可以方便调用命令行或者其他程序
* 代码简单
	
候选语言：

* shell
* python
* groovy
* ruby

